/*3. (10 баллов) Написать две программы, общающиеся через очередью Одна
программа – мастер – получает сообщения, генерируемые другой программой -
отправителем ( текст + любая идентифицирующая информация). Работают n копий
отправителя. Мастер распечатывает сообщения (указывая перед ним информацию,
идентифицирующую отправителя). Перед завершением работы отправитель посылает
сообщение-ограничитель. После получения такого сообщения от всех отправителей
мастер удаляет очередь.
*/

#include <stdio.h>
#include <stdlib.h>
#include <sys/msg.h> // для буфера msg
#include <unistd.h>
#include <string.h>


typedef struct msgbuf
{
    long msgtype; // тип сообщения
    char msgtext[256]; //данные (тело сообщения)
} msg;

int main()
{
    key_t msgkey = ftok("C:/Users/marya/OneDrive/Рабочий стол",'m'); // получили ключ
    int msgid; //идентификатор очереди
    msgid = msgget(msgkey, 0666 | IPC_CREAT); //подключаемся к очереди сообщений;
    msg msg1;
    msg1.msgtype = getpid(); // сохраняем тип сообщения от отправителя
    for(;;)
    {
        gets(msg1.msgtext);
        msgsnd(msgid, &msg1, strlen(msg1.msgtext) + 1, 0);
        if(strcmp(msg1.msgtext, "end of the world") == 0)
            break;
    }

    return 0;
}
